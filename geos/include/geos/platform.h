/**********************************************************************
 *
 * platform.h - generated by CMake from platform.h.cmake
 *
 * GEOS - Geometry Engine Open Source
 * http://geos.osgeo.org
 *
 * Copyright (C) 2009 Mateusz Loskot
 * Copyright (C) 2005-2009 Refractions Research Inc.
 * Copyright (C) 2001-2009 Vivid Solutions Inc.
 *
 * This is free software; you can redistribute and/or modify it under
 * the terms of the GNU Lesser General Public Licence as published
 * by the Free Software Foundation. 
 * See the COPYING file for more information.
 *
 *********************************************************************/

#ifndef GEOS_PLATFORM_H_INCLUDED
#define GEOS_PLATFORM_H_INCLUDED

#include <QtMath>

/* Disable inclusion of platform.h not generated by CMake */
#define GEOS_PLATFORM_H 1

/* Set to 1 if you have stdint.h */
#define HAVE_STDINT_H 1

/* Set to 1 if you have ieeefp.h */
/* #undef HAVE_IEEEFP_H */


#ifdef HAVE_IEEEFP_H
extern "C"
{
#include <ieeefp.h>
}
#endif

#include <limits>

typedef qint64 int64;

#define ISNAN(x) qIsNaN(x)

#define FINITE(x) qIsFinite(x)

#define DoubleNegInfinity (-(std::numeric_limits<double>::infinity)())
#define DoubleMax (std::numeric_limits<double>::max)()
// Defines NaN for Intel platforms
#define DoubleNotANumber std::numeric_limits<double>::quiet_NaN()
// Don't forget to define infinities
#define DoubleInfinity (std::numeric_limits<double>::infinity)()

#endif // GEOS_PLATFORM_H_INCLUDED
